### Se connecter avec username / password et obtenir un token jwt
POST http://localhost:8080/api/v1/auth/login
Content-Type: application/json

{
  "userName": "nadia",
  "password": "pass"
}

> {%
    const jwt = response.body.jwt;
   
   client.global.set("token", jwt);
   client.log(jwt);
 %}

###
GET http://localhost:8080/api/v1/quote
Authorization: Bearer {{adminJwt}}

<> 2022-12-30T163058.200.txt
<> 2022-12-30T145625.200.txt

###
POST http://localhost:8080/api/v1/quotes
Authorization: Bearer {{adminJwt}}
Content-Type: application/json

{
  "generationNumber": 2,
  "why": "eaze"
}

<> 2023-01-07T152702.400.json
<> 2023-01-07T152652.400.json
<> 2023-01-07T152524.400.json
<> 2023-01-07T152027.500.json
<> 2022-12-30T165259.500.json
<> 2022-12-30T165111.500.json

### 
GET http://localhost:8080/api/v1/quotes
Authorization: Bearer {{adminJwt}}


###
GET http://localhost:8080/api/v1/test
Authorization: Bearer {{adminJwt}}

<> 2023-01-07T151632.500.json

###
GET http://localhost:8080/api/v1/quoteRegistration/quotedex
Authorization: Bearer {{adminJwt}}

<> 2023-01-07T183409.500.json
<> 2023-01-07T183334.200.json
<> 2023-01-07T181855.500.json
<> 2023-01-07T181813.500.json
<> 2023-01-07T181450.500.json
<> 2023-01-07T180656.500.json
<> 2023-01-07T180633.500.json
<> 2023-01-07T180501.500.json

###

POST http://localhost:8080/api/v1/trade/propose/2
Authorization: Bearer {{adminJwt}}

###

GET http://localhost:8080/api/v1/quotesProposed
Authorization: Bearer {{collectorJwt}}

### Cr√©er un compte
POST http://localhost:8080/api/v1/auth/register
Content-Type: application/json

{
  "userName": "nadia",
  "password": "pass",
  "role": "ADMIN"
}

###

[
{
  "isPossessed": true/false,
"content": "..." if possessed
"id" : 1
"originator": "admin",
}

]